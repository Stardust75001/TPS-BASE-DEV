name: 📊 Analytics & Monitoring TPS BASE DEV

on:
  schedule:
    # Tous les jours à 8h00 UTC (9h00 CET) 
    - cron: '0 8 * * *'
  workflow_dispatch:
    inputs:
      monitoring_type:
        description: "Type de monitoring"
        required: true
        default: 'complete'
        type: choice
        options:
        - complete
        - analytics_only
        - uptime_only
        - errors_only

env:
  SHOPIFY_STORE: ${{ secrets.SHOPIFY_STORE }}
  SITE_ORIGIN: https://${{ secrets.SHOPIFY_STORE }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  GTM_ID: ${{ secrets.GTM_ID }}
  GA4_ID: ${{ secrets.GA4_ID }}

jobs:
  monitoring:
    name: "📊 Monitoring & Analytics"
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🗓️ Generate Report Timestamp  
        id: timestamp
        run: |
          TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          REPORT_DATE=$(date +"%Y-%m-%d %H:%M:%S UTC")
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          echo "REPORT_DATE=$REPORT_DATE" >> $GITHUB_ENV

      - name: 📁 Create Monitoring Directory
        run: |
          mkdir -p "reports/monitoring/$TIMESTAMP"

      - name: 🔍 Uptime Check
        if: ${{ inputs.monitoring_type == 'complete' || inputs.monitoring_type == 'uptime_only' }}
        run: |
          echo "🔍 Vérification uptime..."
          
          # Pages principales à tester
          pages=(
            "${SITE_ORIGIN}/"
            "${SITE_ORIGIN}/collections/all"
            "${SITE_ORIGIN}/pages/about"
            "${SITE_ORIGIN}/cart"
          )
          
          uptime_ok=0
          uptime_total=0
          
          for page in "${pages[@]}"; do
            echo "Testing: $page"
            uptime_total=$((uptime_total + 1))
            
            start_time=$(date +%s.%N)
            http_code=$(curl -s -o /dev/null -w '%{http_code}' --max-time 10 "$page")
            end_time=$(date +%s.%N)
            
            response_time=$(echo "$end_time - $start_time" | bc -l | xargs printf "%.3f")
            
            if [[ "$http_code" == "200" ]]; then
              uptime_ok=$((uptime_ok + 1))
              echo "✅ $page OK ($response_time s)"
              echo "$page,$http_code,$response_time,OK" >> "reports/monitoring/$TIMESTAMP/uptime.csv"
            else
              echo "❌ $page ERROR $http_code ($response_time s)"
              echo "$page,$http_code,$response_time,ERROR" >> "reports/monitoring/$TIMESTAMP/uptime.csv"
            fi
          done
          
          uptime_percent=$(echo "scale=2; $uptime_ok * 100 / $uptime_total" | bc -l)
          echo "UPTIME_PERCENT=$uptime_percent" >> $GITHUB_ENV
          echo "📊 Uptime: $uptime_percent% ($uptime_ok/$uptime_total)"

      - name: 📊 Analytics Check
        if: ${{ inputs.monitoring_type == 'complete' || inputs.monitoring_type == 'analytics_only' }}
        run: |
          echo "📊 Vérification analytics..."
          
          # Vérifier la présence des scripts analytics sur la homepage
          homepage_html=$(curl -s "$SITE_ORIGIN/")
          
          # GTM Check
          if echo "$homepage_html" | grep -q "googletagmanager.com/gtm.js"; then
            echo "GTM_PRESENT=true" >> $GITHUB_ENV
            echo "✅ Google Tag Manager détecté"
          else
            echo "GTM_PRESENT=false" >> $GITHUB_ENV
            echo "⚠️ Google Tag Manager non détecté"
          fi
          
          # GA4 Check  
          if echo "$homepage_html" | grep -q "gtag.*${GA4_ID}"; then
            echo "GA4_PRESENT=true" >> $GITHUB_ENV
            echo "✅ Google Analytics 4 détecté"
          else
            echo "GA4_PRESENT=false" >> $GITHUB_ENV
            echo "⚠️ Google Analytics 4 non détecté"
          fi
          
          # Facebook Pixel Check
          if echo "$homepage_html" | grep -q "connect.facebook.net"; then
            echo "FB_PIXEL_PRESENT=true" >> $GITHUB_ENV
            echo "✅ Facebook Pixel détecté"
          else
            echo "FB_PIXEL_PRESENT=false" >> $GITHUB_ENV
            echo "⚠️ Facebook Pixel non détecté"
          fi
          
          # Analytics Suite Check
          if echo "$homepage_html" | grep -q "analytics-config-manager"; then
            echo "ANALYTICS_SUITE_PRESENT=true" >> $GITHUB_ENV
            echo "✅ TPS Analytics Suite détecté"
          else
            echo "ANALYTICS_SUITE_PRESENT=false" >> $GITHUB_ENV
            echo "⚠️ TPS Analytics Suite non détecté"
          fi

      - name: 🐛 Error Monitoring
        if: ${{ inputs.monitoring_type == 'complete' || inputs.monitoring_type == 'errors_only' }}
        run: |
          echo "🐛 Monitoring des erreurs..."
          
          # Vérifier les erreurs JavaScript sur la homepage
          # Note: Simulation car nous ne pouvons pas exécuter JS dans GitHub Actions
          
          # Vérifier les logs 404 potentiels en testant des ressources communes
          common_files=(
            "/favicon.ico"
            "/robots.txt"
            "/sitemap.xml"
            "/assets/application.css"
            "/assets/application.js"
          )
          
          error_count=0
          
          for file in "${common_files[@]}"; do
            url="${SITE_ORIGIN}${file}"
            http_code=$(curl -s -o /dev/null -w '%{http_code}' --max-time 5 "$url")
            
            if [[ "$http_code" == "404" ]]; then
              error_count=$((error_count + 1))
              echo "❌ 404: $file"
              echo "$file,404,$(date)" >> "reports/monitoring/$TIMESTAMP/errors.csv"
            elif [[ "$http_code" != "200" ]]; then
              echo "⚠️ $http_code: $file"
            fi
          done
          
          echo "ERROR_COUNT=$error_count" >> $GITHUB_ENV
          echo "🐛 Erreurs détectées: $error_count"

      - name: 🚀 Performance Check
        if: ${{ inputs.monitoring_type == 'complete' }}
        run: |
          echo "🚀 Vérification performance..."
          
          # Test de temps de réponse des pages critiques
          critical_pages=(
            "/"
            "/collections/all"
            "/cart"
          )
          
          total_response_time=0
          page_count=0
          
          for page in "${critical_pages[@]}"; do
            url="${SITE_ORIGIN}${page}"
            
            start_time=$(date +%s.%N)
            curl -s -o /dev/null --max-time 10 "$url"
            end_time=$(date +%s.%N)
            
            response_time=$(echo "$end_time - $start_time" | bc -l)
            total_response_time=$(echo "$total_response_time + $response_time" | bc -l)
            page_count=$((page_count + 1))
            
            echo "⚡ $page: ${response_time}s"
          done
          
          avg_response_time=$(echo "scale=3; $total_response_time / $page_count" | bc -l)
          echo "AVG_RESPONSE_TIME=$avg_response_time" >> $GITHUB_ENV
          echo "📊 Temps de réponse moyen: ${avg_response_time}s"

      - name: 📊 Generate Monitoring Report
        run: |
          echo "📊 Génération du rapport monitoring..."
          
          cat > "reports/monitoring/$TIMESTAMP/MONITORING_REPORT.md" << EOF
          # 📊 RAPPORT MONITORING - TPS BASE DEV
          
          **Date:** $REPORT_DATE
          **Store:** $SHOPIFY_STORE
          **Type:** ${{ inputs.monitoring_type || 'complete' }}
          
          ## 🔍 Uptime & Disponibilité
          
          - **Uptime:** ${UPTIME_PERCENT:-'Non testé'}%
          - **Pages testées:** Accueil, Collections, Panier, À propos
          - **Temps de réponse moyen:** ${AVG_RESPONSE_TIME:-'Non testé'}s
          
          ## 📊 Analytics & Tracking
          
          - **Google Tag Manager:** ${GTM_PRESENT:-'Non testé'}
          - **Google Analytics 4:** ${GA4_PRESENT:-'Non testé'}  
          - **Facebook Pixel:** ${FB_PIXEL_PRESENT:-'Non testé'}
          - **TPS Analytics Suite:** ${ANALYTICS_SUITE_PRESENT:-'Non testé'}
          
          ## 🐛 Monitoring des Erreurs
          
          - **Erreurs 404 détectées:** ${ERROR_COUNT:-'Non testé'}
          - **Status:** $(if [[ "${ERROR_COUNT:-0}" -eq 0 ]]; then echo "✅ Aucune erreur"; else echo "⚠️ Erreurs à investiguer"; fi)
          
          ## 📈 Tendances & Alertes
          
          ### ✅ Points Positifs
          
          $(if [[ "${UPTIME_PERCENT:-0}" -ge 95 ]]; then echo "- ✅ Excellent uptime (≥95%)"; fi)
          $(if [[ "${GTM_PRESENT}" == "true" ]]; then echo "- ✅ Google Tag Manager fonctionnel"; fi)  
          $(if [[ "${ANALYTICS_SUITE_PRESENT}" == "true" ]]; then echo "- ✅ Suite analytics TPS active"; fi)
          $(if [[ "${ERROR_COUNT:-0}" -eq 0 ]]; then echo "- ✅ Aucune erreur 404 détectée"; fi)
          
          ### ⚠️ Points d'Attention
          
          $(if [[ "${UPTIME_PERCENT:-100}" -lt 95 ]]; then echo "- ⚠️ Uptime en dessous de 95%"; fi)
          $(if [[ "${GTM_PRESENT}" != "true" ]]; then echo "- ⚠️ Google Tag Manager non détecté"; fi)
          $(if [[ "${GA4_PRESENT}" != "true" ]]; then echo "- ⚠️ Google Analytics 4 non détecté"; fi)
          $(if [[ "${FB_PIXEL_PRESENT}" != "true" ]]; then echo "- ⚠️ Facebook Pixel non détecté"; fi)
          $(if [[ "${ERROR_COUNT:-0}" -gt 0 ]]; then echo "- ⚠️ ${ERROR_COUNT} erreur(s) 404 détectée(s)"; fi)
          
          ## 🎯 Actions Recommandées
          
          1. Surveiller l'uptime quotidiennement
          2. Vérifier les scripts analytics après chaque déploiement
          3. Corriger les erreurs 404 identifiées
          4. Maintenir des temps de réponse < 3 secondes
          
          ---
          
          **Prochain monitoring:** $(date -d '+1 day' '+%Y-%m-%d')
          **Généré automatiquement par GitHub Actions**
          EOF
          
          echo "✅ Rapport monitoring généré"

      - name: 📤 Upload Monitoring Report
        uses: actions/upload-artifact@v3
        with:
          name: monitoring-report-${{ env.TIMESTAMP }}
          path: reports/monitoring/${{ env.TIMESTAMP }}/
          retention-days: 30

      - name: 📝 Display Summary  
        run: |
          echo "## 📊 Rapport Monitoring Quotidien" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**🗓️ Date:** $REPORT_DATE" >> $GITHUB_STEP_SUMMARY
          echo "**🏪 Store:** $SHOPIFY_STORE" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### 🔍 Uptime & Performance" >> $GITHUB_STEP_SUMMARY
          echo "- Uptime: ${UPTIME_PERCENT:-'Non testé'}%" >> $GITHUB_STEP_SUMMARY
          echo "- Temps de réponse moyen: ${AVG_RESPONSE_TIME:-'Non testé'}s" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### 📊 Analytics" >> $GITHUB_STEP_SUMMARY
          echo "- GTM: $(if [[ "${GTM_PRESENT}" == "true" ]]; then echo "✅ OK"; else echo "❌ NOK"; fi)" >> $GITHUB_STEP_SUMMARY
          echo "- GA4: $(if [[ "${GA4_PRESENT}" == "true" ]]; then echo "✅ OK"; else echo "❌ NOK"; fi)" >> $GITHUB_STEP_SUMMARY
          echo "- Suite TPS: $(if [[ "${ANALYTICS_SUITE_PRESENT}" == "true" ]]; then echo "✅ OK"; else echo "❌ NOK"; fi)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### 🐛 Erreurs" >> $GITHUB_STEP_SUMMARY
          echo "- Erreurs 404: ${ERROR_COUNT:-'Non testé'}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${ERROR_COUNT:-0}" -gt 0 ]] || [[ "${UPTIME_PERCENT:-100}" -lt 95 ]]; then
            echo "⚠️ **Des problèmes nécessitent votre attention**" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **Tous les systèmes fonctionnent correctement**" >> $GITHUB_STEP_SUMMARY
          fi